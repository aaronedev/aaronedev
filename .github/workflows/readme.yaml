---
# .github/workflows/readme.yaml
name: Update README

"on":
  schedule:
  - cron: "0 */3 * * *" # run every 3 hours
  workflow_dispatch: {}

concurrency:
  group: readme-update
  cancel-in-progress: true

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Sync main
      run: git pull --ff-only origin main

    - name: Render README
      uses: muesli/readme-scribe@master
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN && secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
      with:
        template: templates/README.md.tpl
        writeTo: README.md

    - name: Restore WakaTime placeholder
      run: |
        set -euo pipefail

        if grep -q '<!--START_SECTION:waka-->' README.md && grep -q '<!--END_SECTION:waka-->' README.md; then
          exit 0
        fi

        header=$(python3 -c "import re, pathlib, sys; text=pathlib.Path('templates/README.md.tpl').read_text(); match=re.search(r'^### .*WakaTime stats.*$', text, re.MULTILINE); sys.exit('Unable to detect WakaTime header in templates/README.md.tpl') if match is None else print(match.group(0), end='')")

        if ! grep -Fq "${header}" README.md; then
          echo "WakaTime header missing; update the template or README to include it." >&2
          exit 1
        fi

        perl -0pi -e "s/\Q${header}\E.*\z/${header}\n<details>\n  <summary>Click to expand the latest metrics<\\/summary>\n\n<!--START_SECTION:waka-->\n<!--END_SECTION:waka-->\n\n<\\/details>\n/s" README.md

    - name: Inject WakaTime metrics
      uses: anmol098/waka-readme-stats@master
      with:
        WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        SHOW_PROFILE_VIEWS: "False"
        SYMBOL_VERSION: "3"
        SHOW_TOTAL_CODE_TIME: "False"

    - name: Commit and push updates
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN && secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
      run: |-
        set -euo pipefail

        if git diff --quiet HEAD -- README.md; then
          echo "README already up to date."
          exit 0
        fi

        git config user.name "readme-scribe ðŸ¤–"
        git config user.email "actions@github.com"

        git add README.md
        git commit -m "chore: update README from template"

        if ! git pull --rebase --autostash --strategy-option=ours origin main; then
          echo "Rebase failed, aligning with latest origin/main" >&2
          git rebase --abort || true
          git fetch origin main
          git reset --soft origin/main

          if git diff --cached --quiet; then
            echo "Template already matches remote after soft reset. Nothing to push."
            exit 0
          fi

          git commit -m "chore: update README from template"
        fi

        git push origin HEAD:main
